# Generated by Django 4.2.7 on 2025-10-26 23:43

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='WeatherForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(help_text='Nome da cidade para a previsão', max_length=100, verbose_name='Cidade')),
                ('country', models.CharField(help_text='Código do país (ex: BR, US)', max_length=10, verbose_name='País')),
                ('forecast_date', models.DateTimeField(help_text='Data e hora da previsão', verbose_name='Data da Previsão')),
                ('temperature', models.FloatField(help_text='Temperatura em Celsius', verbose_name='Temperatura (°C)')),
                ('humidity', models.IntegerField(help_text='Umidade relativa do ar em porcentagem', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Umidade (%)')),
                ('pressure', models.FloatField(help_text='Pressão atmosférica em hectopascais', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Pressão (hPa)')),
                ('wind_speed', models.FloatField(help_text='Velocidade do vento em metros por segundo', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Velocidade do Vento (m/s)')),
                ('wind_direction', models.IntegerField(help_text='Direção do vento em graus', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(360)], verbose_name='Direção do Vento (°)')),
                ('cloudiness', models.IntegerField(help_text='Porcentagem de nebulosidade', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Nebulosidade (%)')),
                ('visibility', models.FloatField(blank=True, help_text='Visibilidade em quilômetros', null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Visibilidade (km)')),
                ('uv_index', models.FloatField(blank=True, help_text='Índice ultravioleta', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)], verbose_name='Índice UV')),
                ('description', models.CharField(help_text='Descrição das condições meteorológicas', max_length=200, verbose_name='Descrição')),
                ('main_condition', models.CharField(help_text='Condição meteorológica principal (ex: Clear, Clouds, Rain)', max_length=50, verbose_name='Condição Principal')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'Previsão do Tempo',
                'verbose_name_plural': 'Previsões do Tempo',
                'ordering': ['-forecast_date'],
                'indexes': [models.Index(fields=['city', 'country', 'forecast_date'], name='weather_wea_city_c62f2f_idx'), models.Index(fields=['forecast_date'], name='weather_wea_forecas_ba9798_idx'), models.Index(fields=['main_condition'], name='weather_wea_main_co_ee7d14_idx')],
                'unique_together': {('city', 'country', 'forecast_date')},
            },
        ),
        migrations.CreateModel(
            name='WeatherAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100, verbose_name='Cidade')),
                ('country', models.CharField(max_length=10, verbose_name='País')),
                ('alert_type', models.CharField(choices=[('temperature', 'Temperatura'), ('humidity', 'Umidade'), ('wind', 'Vento'), ('precipitation', 'Precipitação'), ('storm', 'Tempestade'), ('heat_wave', 'Onda de Calor'), ('cold_wave', 'Onda de Frio')], max_length=20, verbose_name='Tipo de Alerta')),
                ('severity', models.CharField(choices=[('low', 'Baixa'), ('medium', 'Média'), ('high', 'Alta'), ('critical', 'Crítica')], max_length=10, verbose_name='Severidade')),
                ('title', models.CharField(help_text='Título do alerta', max_length=200, verbose_name='Título')),
                ('description', models.TextField(help_text='Descrição detalhada do alerta', verbose_name='Descrição')),
                ('start_time', models.DateTimeField(help_text='Data e hora de início do alerta', verbose_name='Início')),
                ('end_time', models.DateTimeField(help_text='Data e hora de fim do alerta', verbose_name='Fim')),
                ('is_active', models.BooleanField(default=True, help_text='Se o alerta está ativo', verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'Alerta Meteorológico',
                'verbose_name_plural': 'Alertas Meteorológicos',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['city', 'country'], name='weather_wea_city_85a842_idx'), models.Index(fields=['alert_type', 'severity'], name='weather_wea_alert_t_5b595d_idx'), models.Index(fields=['is_active', 'start_time', 'end_time'], name='weather_wea_is_acti_094429_idx')],
            },
        ),
    ]
